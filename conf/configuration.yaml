server:
  requestLog:
    appenders:
      - type: file
        currentLogFilename: ${ARLAS_TAGGER_ACCESS_LOG_FILE:-arlas-tagger-access.log}
        archivedLogFilenamePattern: ${ACCESS_TAGGER_LOG_FILE_ARCHIVE:-arlas-tagger-access-%d.log.gz}
  registerDefaultExceptionMappers: false
  type: simple
  rootPath: ${ARLAS_TAGGER_PREFIX:-/arlas_tagger}
  applicationContextPath: ${ARLAS_TAGGER_APP_PATH:-/}
  adminContextPath: ${ARLAS_TAGGER_ADMIN_PATH:-/admin}
  connector:
    type: http
    port: ${ARLAS_TAGGER_PORT:-9998}
  maxThreads: ${ARLAS_TAGGER_MAX_THREADS:-1024}
  minThreads: ${ARLAS_TAGGER_MIN_THREADS:-8}
  maxQueuedRequests: ${ARLAS_TAGGER_MAX_QUEUED_REQUESTS:-1024}

########################################################
############ LOGGING                     ###############
########################################################
# Configuration console and file LOGGING
logging:
  level: ${ARLAS_LOGGING_LEVEL:-INFO}
  loggers:
    "org.apache.kafka": ${ARLAS_LOGGING_KAFKA_LEVEL:-INFO}
    "javax.management.mbeanserver": ${ARLAS_LOGGING_MBEAN_LEVEL:-INFO}
    "org.apache.http": ${ARLAS_LOGGING_APACHE_HTTP_LEVEL:-INFO}
    "org.eclipse.jetty": ${ARLAS_LOGGING_JETTY_LEVEL:-INFO}
    "org.elasticsearch.client": ${ARLAS_LOGGING_ELASTICSEARCH_LEVEL:-DEBUG}
    "org.reflections": ${ARLAS_LOGGING_REFLECTIONS_LEVEL:-INFO}
    "io.dropwizard": ${ARLAS_LOGGING_DROPWIZARD_LEVEL:-INFO}
    "io.swagger": ${ARLAS_LOGGING_SWAGGER_LEVEL:-INFO}
  appenders:
    - type: console
      threshold:  ${ARLAS_LOGGING_CONSOLE_LEVEL:-INFO}
    - type: file
      currentLogFilename: ${ARLAS_LOGGING_FILE:-arlas.log}
      threshold: ${ARLAS_LOGGING_FILE_LEVEL:-INFO}
      archive: ${ARLAS_LOGGING_FILE_ARCHIVE:-true}
      archivedLogFilenamePattern: ${ARLAS_LOGGING_FILE_ARCHIVE_FILE_PATTERN:-arlas-%d.log}
      archivedFileCount: ${ARLAS_LOGGING_FILE_ARCHIVE_FILE_COUNT:-5}

########################################################
############ ARLAS TAGGER                ###############
########################################################
swagger: # Configuration of SWAGGER for generating documentation and APIs
  resourcePackage: io.arlas.tagger.rest # The java package to process for extracting the APIs
  # temporary patch for bug https://github.com/smoketurner/dropwizard-swagger/issues/206
  # to be removed when version of dropwizard.swagger.version is upgraded
  customJavascript: ${ARLAS_TAGGER_CUSTOM_JS:-/arlas/swagger-static/custom-request-interceptor.js}

kafka_configuration:
  kafka_commit_max_retries: ${KAFKA_COMMIT_MAX_RETRIES:-3}
  kafka_consumer_poll_timeout: ${KAFKA_CONSUMER_POLL_TIMEOUT:-100}
  kafka_batch_size_tagref: ${KAFKA_BATCH_SIZE_TAGREF:-1}
  kafka_batch_size_tagexec: ${KAFKA_BATCH_SIZE_TAGEXEC:-10}
  kafka_number_tagexec: ${KAFKA_NUMBER_TAGEXEC:-1}
  kafka_bootstrap_servers: ${KAFKA_BROKERS:-localhost:9092}
  kafka_consumer_group_id_tagref_log: ${KAFKA_CONSUMER_GROUP_ID_TAGREF_LOG:-tagref_log_consumer_group}
  kafka_consumer_group_id_execute_tags: ${KAFKA_CONSUMER_GROUP_ID_EXECUTE_TAGS:-execute_tags_consumer_group}
  kafka_consumer_group_id_explore_tags: ${KAFKA_CONSUMER_GROUP_ID_EXPLORE_TAGS:-explore_tags_consumer_group}
  kafka_topic_tagref_log: ${KAFKA_TOPIC_TAGREF_LOG:-tagref_log}
  kafka_topic_execute_tags: ${KAFKA_TOPIC_EXECUTE_TAGS:-execute_tags}
  kafka_extra_properties: ${KAFKA_EXTRA_PROPS:-}

elastic:
  elastic-nodes: ${ARLAS_ELASTIC_NODES:-localhost:9200}
  elastic-sniffing: ${ARLAS_ELASTIC_SNIFFING:-false}
  elastic-enable-ssl: ${ARLAS_ELASTIC_ENABLE_SSL:-false}
  elastic-credentials: ${ARLAS_ELASTIC_CREDENTIALS}
  elastic-skip-master: ${ARLAS_ELASTIC_SKIP_MASTER:-true}
  elastic-socket-timeout: ${ARLAS_ELASTIC_SOCKET_TIMEOUT:-30000}
  elastic-max-precision-threshold: ${ARLAS_ELASTIC_MAX_PRECISON_THRESHOLD:-3000}

arlas_collections_configuration:
  arlas_index:  ${ARLAS_COLLECTION_INDEX:-.arlas}
  arlas_cache_size: ${ARLAS_COLLECTION_CACHE_SIZE:-1000}
  arlas_cache_timeout: ${ARLAS_CACHE_TIMEOUT:-60}

arlas_rest_cache_timeout: ${ARLAS_REST_CACHE_TIMEOUT:-0}

tagging_status_timeout: ${TAGGING_STATUS_TIMEOUT:-3600000}

arlas_cors:
  enabled: ${ARLAS_TAGGER_CORS_ENABLED:-false}
  allowed_origins: ${ARLAS_CORS_ALLOWED_ORIGINS:-"*"}
  allowed_headers: ${ARLAS_CORS_ALLOWED_HEADERS:-"arlas-user,arlas-groups,arlas-organization,arlas-org-filter,X-Requested-With,Content-Type,Accept,Origin,Authorization,X-Forwarded-User"}
  allowed_methods: ${ARLAS_CORS_ALLOWED_METHODS:-"OPTIONS,GET,PUT,POST,DELETE,HEAD"}
  allowed_credentials: ${ARLAS_CORS_ALLOWED_CREDENTIALS:-true}
  exposed_headers: ${ARLAS_CORS_EXPOSED_HEADERS:-"Content-Type,Authorization,X-Requested-With,Content-Length,Accept,Origin,Location,WWW-Authenticate"}

arlas_database_factory_class: ${ARLAS_DATABASE_FACTORY_CLASS:-io.arlas.tagger.impl.ElasticDatabaseToolsFactory}
arlas_cache_factory_class: ${ARLAS_CACHE_FACTORY_CLASS:-io.arlas.tagger.impl.HazelcastCacheFactory}

########################################################
############ AUTHENTICATION              ###############
########################################################
arlas_auth_policy_class: ${ARLAS_AUTH_POLICY_CLASS:-io.arlas.filter.impl.NoPolicyEnforcer}

arlas_auth:
  permission_url: ${ARLAS_AUTH_PERMISSION_URL:-http://arlas-iam-server/arlas_iam_server/auth/permissions}
  public_uris: [${ARLAS_AUTH_PUBLIC_URIS:-swagger.*:*}]
  # deprecated, use it only for Integration tests
  certificate_file: ${ARLAS_AUTH_CERT_FILE:-/opt/app/arlas.pem}
  certificate_url: ${ARLAS_AUTH_CERT_URL:-}
  header_user: ${ARLAS_HEADER_USER:-arlas-user}
  header_group: ${ARLAS_HEADER_GROUP:-arlas-groups}
  anonymous_value: ${ARLAS_ANONYMOUS_VALUE:-anonymous}
  claim_roles: ${ARLAS_CLAIM_ROLES:-http://arlas.io/roles}
  claim_permissions: ${ARLAS_CLAIM_PERMISSIONS:-http://arlas.io/permissions}
  keycloak:
    realm: ${ARLAS_AUTH_KEYCLOAK_REALM:-arlas}
    auth-server-url: ${ARLAS_AUTH_KEYCLOAK_URL:-http://keycloak:8080/auth}
    resource: ${ARLAS_AUTH_KEYCLOAK_RESOURCE:-arlas}
    credentials:
      secret: ${ARLAS_AUTH_KEYCLOAK_SECRET:-2ec98d5c-7a6d-4f7f-9214-99d0a4ba3907}
