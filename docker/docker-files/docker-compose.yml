version: '3'

services:
  arlas-tagger:
    build:
      context: ../../.
      dockerfile: ${DOCKERFILE:-docker/docker-files/Dockerfile-package-only}
    image: gisaia/arlas-tagger:${ARLAS_TAGGER_VERSION:-latest}
    container_name: arlas-tagger
    environment:
      # ES
      - ARLAS_ELASTIC_NODES=${ARLAS_ELASTIC_NODES:-elasticsearch:9200}
      - ARLAS_ELASTIC_SNIFFING=${ARLAS_ELASTIC_SNIFFING:-false}
      - ARLAS_ELASTIC_ENABLE_SSL=${ARLAS_ELASTIC_ENABLE_SSL:-false}
      - ARLAS_ELASTIC_SKIP_MASTER="${ARLAS_ELASTIC_SKIP_MASTER:-true}"
      - ARLAS_ELASTIC_CREDENTIALS=${ARLAS_ELASTIC_CREDENTIALS}
      # ARLAS SERVER
      - ARLAS_SERVER_NODE=${ARLAS_SERVER_NODE}
      - ARLAS_COLLECTION_INDEX=${ARLAS_COLLECTION_INDEX:-.arlas}
      # TAGGER Server
      - ARLAS_TAGGER_PORT=${ARLAS_TAGGER_PORT:-9998}
      - ARLAS_TAGGER_PREFIX=${ARLAS_TAGGER_PREFIX:-/arlas_tagger}
      - ARLAS_TAGGER_APP_PATH=${ARLAS_TAGGER_APP_PATH:-/}
      - ARLAS_TAGGER_ADMIN_PATH=${ARLAS_TAGGER_ADMIN_PATH:-/admin}
      # KAFKA
      - KAFKA_COMMIT_MAX_RETRIES=${KAFKA_COMMIT_MAX_RETRIES:-3}
      - KAFKA_CONSUMER_POLL_TIMEOUT=${KAFKA_CONSUMER_POLL_TIMEOUT:-100}
      - KAFKA_BATCH_SIZE_TAGREF=${KAFKA_BATCH_SIZE_TAGREF:-1}
      - KAFKA_BATCH_SIZE_TAGEXEC=${KAFKA_BATCH_SIZE_TAGEXEC:-10}
      - KAFKA_NUMBER_TAGEXEC=${KAFKA_NUMBER_TAGEXEC:-12}
      - KAFKA_BROKERS=${KAFKA_BROKERS:-kafka:9092}
      - KAFKA_CONSUMER_GROUP_ID_TAGREF_LOG=${KAFKA_CONSUMER_GROUP_ID_TAGREF_LOG:-tagref_log_consumer_group}
      - KAFKA_CONSUMER_GROUP_ID_EXECUTE_TAGS=${KAFKA_CONSUMER_GROUP_ID_EXECUTE_TAGS:-execute_tags_consumer_group}
      - KAFKA_TOPIC_TAGREF_LOG=${KAFKA_TOPIC_TAGREF_LOG:-tagref_log}
      - KAFKA_TOPIC_EXECUTE_TAGS=${KAFKA_TOPIC_EXECUTE_TAGS:-execute_tags}
      - KAFKA_EXTRA_PROPS=${KAFKA_EXTRA_PROPS}
      # TAGGING
      - TAGGING_STATUS_TIMEOUT=${TAGGING_STATUS_TIMEOUT:-3600000}
      # LOGGING
      - ARLAS_LOGGING_LEVEL=${ARLAS_LOGGING_LEVEL:-INFO}
      - ARLAS_LOGGING_CONSOLE_LEVEL=${ARLAS_LOGGING_CONSOLE_LEVEL:-INFO}
      - ARLAS_LOGGING_FILE=${ARLAS_LOGGING_FILE:-arlas.log}
      - ARLAS_LOGGING_FILE_LEVEL=${ARLAS_LOGGING_FILE_LEVEL:-INFO}
      - ARLAS_AUTH_POLICY_CLASS="${ARLAS_AUTH_POLICY_CLASS:-io.arlas.commons.rest.auth.NoPolicyEnforcer}"
      - ARLAS_AUTH_PERMISSION_URL="${ARLAS_AUTH_PERMISSION_URL:-http://arlas-iam-server:9990/arlas_iam_server/permissions}"
      - ARLAS_AUTH_CERT_URL="${ARLAS_AUTH_CERT_URL}"
      - ARLAS_AUTH_COLUMN_FILTER_REQUIRED="${ARLAS_AUTH_COLUMN_FILTER_REQUIRED:-false}"
      - ARLAS_CACHE_FACTORY_CLASS="${ARLAS_CACHE_FACTORY_CLASS:-io.arlas.tagger.impl.HazelcastCacheFactory}"
      - ARLAS_CACHE_TIMEOUT="${ARLAS_CACHE_TIMEOUT:-5}"
    depends_on:
      - kafka
    ports:
      - 19998:9998
    volumes:
      - ${ARLAS_AUTH_LOCAL_CERT_FILE:-/tmp}:${ARLAS_AUTH_CERT_FILE:-/opt/app/arlas.pem}:ro
    command: ["bash", "-c", "/opt/app/wait-for-tagger-deps.sh $$KAFKA_BROKERS $$ARLAS_ELASTIC_NODES $$ARLAS_SERVER_NODE"]
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: "zookeeper"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka"
    depends_on:
      - zookeeper
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      LOG4J_LOGGER_KAFKA: INFO
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${KAFKA_DATADIR}:/tmp/kafka-logs
